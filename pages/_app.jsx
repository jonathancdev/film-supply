import React, { useState } from "react";
import "../styles/globals.css";
import "../styles/sass/main.scss";
import Head from "next/head";
import Layout from "../components/Layout";
import useCart from "../hooks/useCart";
import { useRouter } from "next/router";

function MyApp({ Component, pageProps, items, categories }) {
  const { cart, subtotal, quantity, addToCart, decrementItem } = useCart();
  const [shoppingCart, setShoppingCart] = useState([]);
  const parse = (param) => {
    let parsed;
    switch (param) {
      case "brands":
        parsed = "brand";
        break;
      case "color":
        parsed = "type";
        break;
      case "black-and-white":
        parsed = "black and white";
        break;
      case "color-negative":
        parsed = "color negative";
        break;
      case "color-all":
        parsed = ["color negative", "slide"];
        break;
      default:
        parsed = param;
    }
    return parsed;
  };
  const router = useRouter();
  const category = parse(router.query.category);
  const subcategory = parse(router.query.subcategory);

  return (
    <>
      <Head>
        <title>Film Supply</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout categories={categories} quantity={quantity}>
        <Component
          {...pageProps}
          category={category}
          subcategory={subcategory}
          items={items}
          categories={categories}
          addToCart={addToCart}
        />
      </Layout>
    </>
  );
}

export default MyApp;

MyApp.getInitialProps = async () => {
  const [items, categories] = await Promise.all([
    fetch("https://heuristic-shirley-45ccf9.netlify.app/items.json").then((r) =>
      r.json()
    ),
    fetch("https://heuristic-shirley-45ccf9.netlify.app/categories.json").then(
      (r) => r.json()
    ),
  ]);
  items.items.map(
    (item) =>
      (item.uniqueId = (
        item.brand +
        item.title +
        item.format +
        item.price
      ).replace(/\s/g, ""))
  );

  return {
    items: items.items,
    categories: categories.categories[0],
  };
};
